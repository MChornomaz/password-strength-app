{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nexport class PasswordStrengthComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.passwordStrength = 'empty';\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required]]\n    });\n    this.passwordForm.get('password')?.valueChanges.subscribe(value => {\n      this.updatePasswordStrength(value);\n    });\n  }\n  updatePasswordStrength(password) {\n    const hasLetters = /[a-zA-Z]/.test(password);\n    const hasDigits = /\\d/.test(password);\n    const hasSymbols = /[!@#\\$%\\^\\&*\\)\\(+=._-]/.test(password);\n    console.log(this.passwordStrength);\n    console.log('hasLetters', hasLetters);\n    console.log('hasDigits', hasDigits);\n    console.log('hasSymbols', hasSymbols);\n    console.log('length', password.length);\n    console.log(hasLetters && hasDigits && hasSymbols && password.length >= 8);\n    if (password.length < 8) {\n      this.passwordStrength = 'weak';\n    }\n    if (hasLetters && hasSymbols && password.length >= 8 || hasLetters && hasDigits && password.length >= 8 || hasDigits && hasSymbols && password.length >= 8) {\n      this.passwordStrength = 'medium';\n    }\n    if (hasLetters && hasDigits && hasSymbols && password.length >= 8) {\n      this.passwordStrength = 'strong';\n    }\n    if (password.length === 0) {\n      this.passwordStrength = 'empty';\n    }\n  }\n  static #_ = this.ɵfac = function PasswordStrengthComponent_Factory(t) {\n    return new (t || PasswordStrengthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordStrengthComponent,\n    selectors: [[\"app-password-strength\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"wrapper\"], [1, \"password-strength\", 3, \"formGroup\", \"ngClass\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\"], [1, \"strength-block\"], [1, \"strength-section\"]],\n    template: function PasswordStrengthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"div\", 4)(5, \"div\", 4)(6, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.passwordForm)(\"ngClass\", ctx.passwordStrength);\n      }\n    },\n    dependencies: [i2.NgClass, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".wrapper[_ngcontent-%COMP%]{\\n  width: 100%;\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.password-strength[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0;\\n  position: relative;\\n  width: 400px;\\n  height: 200px;\\n}\\n\\n.strength-block[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.password-strength[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  margin: 5px 0;\\n}\\n\\n.strength-section[_ngcontent-%COMP%] {\\n  height: 10px;\\n  width: 32%;\\n  transition: width 0.3s;\\n  background-color: gray;\\n  border-radius: 5px;\\n}\\n\\n.empty[_ngcontent-%COMP%]   .strength-section[_ngcontent-%COMP%] {\\n  background-color: grey;\\n}\\n\\n.weak[_ngcontent-%COMP%]   .strength-section[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.medium[_ngcontent-%COMP%]   .strength-section[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n\\n.strong[_ngcontent-%COMP%]   .strength-section[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFzc3dvcmQtc3RyZW5ndGgvcGFzc3dvcmQtc3RyZW5ndGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7RUFDWixVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIud3JhcHBlcntcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ucGFzc3dvcmQtc3RyZW5ndGgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDEwcHggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogMjAwcHg7XG59XG5cbi5zdHJlbmd0aC1ibG9jayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLnBhc3N3b3JkLXN0cmVuZ3RoIGlucHV0IHtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW46IDVweCAwO1xufVxuXG4uc3RyZW5ndGgtc2VjdGlvbiB7XG4gIGhlaWdodDogMTBweDtcbiAgd2lkdGg6IDMyJTtcbiAgdHJhbnNpdGlvbjogd2lkdGggMC4zcztcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uZW1wdHkgLnN0cmVuZ3RoLXNlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xufVxuXG4ud2VhayAuc3RyZW5ndGgtc2VjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLm1lZGl1bSAuc3RyZW5ndGgtc2VjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbn1cblxuLnN0cm9uZyAuc3RyZW5ndGgtc2VjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","PasswordStrengthComponent","constructor","fb","passwordStrength","passwordForm","group","password","required","get","valueChanges","subscribe","value","updatePasswordStrength","hasLetters","test","hasDigits","hasSymbols","console","log","length","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","PasswordStrengthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Стажування\\USENSE\\test-task\\password-strength-app\\src\\app\\password-strength\\password-strength.component.ts","D:\\Стажування\\USENSE\\test-task\\password-strength-app\\src\\app\\password-strength\\password-strength.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-password-strength',\n  templateUrl: './password-strength.component.html',\n  styleUrls: ['./password-strength.component.css']\n})\nexport class PasswordStrengthComponent {\n  passwordForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required]]\n    });\n\n    this.passwordForm.get('password')?.valueChanges.subscribe(value => {\n      this.updatePasswordStrength(value);\n    });\n  }\n\n  passwordStrength: string = 'empty';\n\n  updatePasswordStrength(password: string) {\n    const hasLetters = /[a-zA-Z]/.test(password);\n    const hasDigits = /\\d/.test(password);\n    const hasSymbols = /[!@#\\$%\\^\\&*\\)\\(+=._-]/.test(password);\n    console.log(this.passwordStrength)\n    console.log('hasLetters', hasLetters)\n    console.log('hasDigits', hasDigits)\n    console.log('hasSymbols', hasSymbols)\n    console.log('length', password.length)\n    console.log(hasLetters && hasDigits && hasSymbols && password.length >= 8)\n\n\n    if (password.length < 8) {\n      this.passwordStrength = 'weak';\n    }\n    if ((hasLetters && hasSymbols && password.length >= 8) ||\n      (hasLetters && hasDigits && password.length >= 8) ||\n      (hasDigits && hasSymbols && password.length >= 8)) {\n      this.passwordStrength = 'medium';\n    }\n    if (hasLetters && hasDigits && hasSymbols && password.length >= 8) {\n      this.passwordStrength = 'strong';\n    }\n    if (password.length === 0) {\n      this.passwordStrength = 'empty';\n    }\n  }\n}\n","<div class=\"wrapper\">\n    <form class=\"password-strength\" [formGroup]=\"passwordForm\" [ngClass]=\"passwordStrength\">\n      <input formControlName=\"password\" type=\"password\" placeholder=\"Password\">\n      <div class=\"strength-block\">\n        <div class=\"strength-section\"></div>\n        <div class=\"strength-section\"></div>\n        <div class=\"strength-section\"></div>\n      </div>\n    </form>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAOnE,OAAM,MAAOC,yBAAyB;EAGpCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAUtB,KAAAC,gBAAgB,GAAW,OAAO;IAThC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,CAAC;KACrC,CAAC;IAEF,IAAI,CAACH,YAAY,CAACI,GAAG,CAAC,UAAU,CAAC,EAAEC,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MAChE,IAAI,CAACC,sBAAsB,CAACD,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EAIAC,sBAAsBA,CAACN,QAAgB;IACrC,MAAMO,UAAU,GAAG,UAAU,CAACC,IAAI,CAACR,QAAQ,CAAC;IAC5C,MAAMS,SAAS,GAAG,IAAI,CAACD,IAAI,CAACR,QAAQ,CAAC;IACrC,MAAMU,UAAU,GAAG,wBAAwB,CAACF,IAAI,CAACR,QAAQ,CAAC;IAC1DW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,gBAAgB,CAAC;IAClCc,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,UAAU,CAAC;IACrCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;IACnCE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEZ,QAAQ,CAACa,MAAM,CAAC;IACtCF,OAAO,CAACC,GAAG,CAACL,UAAU,IAAIE,SAAS,IAAIC,UAAU,IAAIV,QAAQ,CAACa,MAAM,IAAI,CAAC,CAAC;IAG1E,IAAIb,QAAQ,CAACa,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAAChB,gBAAgB,GAAG,MAAM;;IAEhC,IAAKU,UAAU,IAAIG,UAAU,IAAIV,QAAQ,CAACa,MAAM,IAAI,CAAC,IAClDN,UAAU,IAAIE,SAAS,IAAIT,QAAQ,CAACa,MAAM,IAAI,CAAE,IAChDJ,SAAS,IAAIC,UAAU,IAAIV,QAAQ,CAACa,MAAM,IAAI,CAAE,EAAE;MACnD,IAAI,CAAChB,gBAAgB,GAAG,QAAQ;;IAElC,IAAIU,UAAU,IAAIE,SAAS,IAAIC,UAAU,IAAIV,QAAQ,CAACa,MAAM,IAAI,CAAC,EAAE;MACjE,IAAI,CAAChB,gBAAgB,GAAG,QAAQ;;IAElC,IAAIG,QAAQ,CAACa,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAAChB,gBAAgB,GAAG,OAAO;;EAEnC;EAAC,QAAAiB,CAAA,G;qBAzCUpB,yBAAyB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBzB,yBAAyB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRtCX,EAAA,CAAAa,cAAA,aAAqB;QAEfb,EAAA,CAAAc,SAAA,eAAyE;QACzEd,EAAA,CAAAa,cAAA,aAA4B;QAC1Bb,EAAA,CAAAc,SAAA,aAAoC;QAGtCd,EAAA,CAAAe,YAAA,EAAM;;;QANwBf,EAAA,CAAAgB,SAAA,GAA0B;QAA1BhB,EAAA,CAAAiB,UAAA,cAAAL,GAAA,CAAA7B,YAAA,CAA0B,YAAA6B,GAAA,CAAA9B,gBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}